{"version":3,"sources":["pages/other/Contact.js"],"names":["contactForm","name","validate","required","value","message","pattern","connect","state","merchant","merchantData","dispatch","setLoader","multilanguage","strings","location","pathname","addToast","useToasts","useForm","mode","register","handleSubmit","errors","reset","onSubmitContactForm","data","a","action","constant","ACTION","CONTACT","param","comment","email","subject","WebService","post","appearance","autoDismiss","to","process","headerContainerClass","headerPaddingClass","headerTop","className","phone","href","address","city","stateProvince","country","postalCode","onSubmit","type","ref","placeholder"],"mappings":"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","file":"static/js/21.f80564e2.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport Layout from \"../../layouts/Layout\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\n// import LocationMap from \"../../components/contact/LocationMap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { connect } from \"react-redux\";\r\nimport WebService from '../../util/webService';\r\nimport constant from '../../util/constant';\r\nimport { setLoader } from \"../../redux/actions/loaderActions\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { multilanguage } from \"redux-multilanguage\";\r\nconst contactForm = {\r\n  email: {\r\n    name: \"email\",\r\n    validate: {\r\n      required: {\r\n        value: true,\r\n        message: \"Email is required\"\r\n      },\r\n      pattern: {\r\n        value: /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i,\r\n        message: 'Please entered the valid email id'\r\n      }\r\n    }\r\n  },\r\n  username: {\r\n    name: \"username\",\r\n    validate: {\r\n      required: {\r\n        value: true,\r\n        message: \"Name is required\"\r\n      }\r\n    }\r\n  },\r\n  subject: {\r\n    name: \"subject\",\r\n    validate: {\r\n      required: {\r\n        value: true,\r\n        message: \"Subject is required\"\r\n      }\r\n    }\r\n  },\r\n  comment: {\r\n    name: \"comment\",\r\n    validate: {\r\n      required: {\r\n        value: true,\r\n        message: \"Message is required\"\r\n      }\r\n    }\r\n  }\r\n};\r\nconst Contact = ({ strings, location, merchant, setLoader }) => {\r\n  const { pathname } = location;\r\n  const { addToast } = useToasts();\r\n  const { register, handleSubmit, errors, reset } = useForm({\r\n    mode: \"onChange\"\r\n  });\r\n\r\n  const onSubmitContactForm = async (data) => {\r\n    // console.log(data)\r\n    setLoader(true)\r\n    try {\r\n      let action = constant.ACTION.CONTACT;\r\n      let param = {\r\n        \"comment\": data.comment,\r\n        \"email\": data.email,\r\n        \"name\": data.name,\r\n        \"subject\": data.subject,\r\n      }\r\n      await WebService.post(action, param);\r\n      // console.log(response)\r\n      // if (response) {\r\n      reset({})\r\n      addToast(\"Thank you for getting in touch!\", { appearance: \"success\", autoDismiss: true });\r\n      // }\r\n      setLoader(false)\r\n    } catch (error) {\r\n      setLoader(false)\r\n    }\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>{merchant.name} | {strings[\"Contact\"]}</title>\r\n        {/* <meta\r\n          name=\"description\"\r\n          content=\"Contact of flone react minimalist eCommerce template.\"\r\n        /> */}\r\n      </MetaTags>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>{strings[\"Home\"]}</BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        {strings[\"Contact\"]}\r\n      </BreadcrumbsItem>\r\n      <Layout headerContainerClass=\"container-fluid\"\r\n        headerPaddingClass=\"header-padding-2\"\r\n        headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n        <div className=\"contact-area pt-100 pb-100\">\r\n          <div className=\"container\">\r\n            {/**\r\n            <div className=\"contact-map mb-10\">\r\n              <LocationMap merchant={merchant} />\r\n            </div>\r\n            */}\r\n            <div className=\"custom-row-2\">\r\n              <div className=\"col-lg-4 col-md-5\">\r\n                <div className=\"contact-info-wrap\">\r\n                  <div className=\"single-contact-info\">\r\n                    <div className=\"contact-icon\">\r\n                      <i className=\"fa fa-phone\" />\r\n                    </div>\r\n                    <div className=\"contact-info-dec\">\r\n                      <p>{merchant.phone}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-contact-info\">\r\n                    <div className=\"contact-icon\">\r\n                      <i className=\"fa fa-globe\" />\r\n                    </div>\r\n                    <div className=\"contact-info-dec\">\r\n                      <p>\r\n                        <a href={'mailto:' + merchant.email}>{merchant.email}</a>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-contact-info\">\r\n                    <div className=\"contact-icon\">\r\n                      <i className=\"fa fa-map-marker\" />\r\n                    </div>\r\n                    <div className=\"contact-info-dec\">\r\n                      <p>{merchant.address.address} </p>\r\n                      <p>{merchant.address.city}, {merchant.address.stateProvince}, {merchant.address.country}</p>\r\n                      <p>{merchant.address.postalCode}</p>\r\n                    </div>\r\n                  </div>\r\n                  {/**\r\n                  <div className=\"contact-social text-center\">\r\n                    <h3>Follow Us</h3>\r\n                    <ul>\r\n                      <li>\r\n                        <a href=\"//facebook.com\">\r\n                          <i className=\"fa fa-facebook\" />\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"//pinterest.com\">\r\n                          <i className=\"fa fa-pinterest-p\" />\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"//thumblr.com\">\r\n                          <i className=\"fa fa-tumblr\" />\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"//vimeo.com\">\r\n                          <i className=\"fa fa-vimeo\" />\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"//twitter.com\">\r\n                          <i className=\"fa fa-twitter\" />\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  */}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-8 col-md-7\">\r\n                <div className=\"contact-form\">\r\n                  <div className=\"contact-title mb-30\">\r\n                    <h2>{strings[\"Get In Touch\"]}</h2>\r\n                  </div>\r\n                  <form className=\"contact-form-style\" onSubmit={handleSubmit(onSubmitContactForm)}>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-6\">\r\n                        <input type=\"text\" name={contactForm.username.name} ref={register(contactForm.username.validate)} placeholder={strings[\"Name\"]} />\r\n                        {errors[contactForm.username.name] && <p className=\"error-msg\">{errors[contactForm.username.name].message}</p>}\r\n                      </div>\r\n                      <div className=\"col-lg-6\">\r\n                        <input name={contactForm.email.name} ref={register(contactForm.email.validate)} placeholder={strings[\"Email address\"]} type=\"email\" />\r\n                        {errors[contactForm.email.name] && <p className=\"error-msg\">{errors[contactForm.email.name].message}</p>}\r\n                      </div>\r\n                      <div className=\"col-lg-12\">\r\n                        <input\r\n                          placeholder={strings[\"Subject\"]}\r\n                          type=\"text\"\r\n                          name={contactForm.subject.name}\r\n                          ref={register(contactForm.subject.validate)}\r\n                        />\r\n                        {errors[contactForm.subject.name] && <p className=\"error-msg\">{errors[contactForm.subject.name].message}</p>}\r\n                      </div>\r\n                      <div className=\"col-lg-12\">\r\n                        <textarea\r\n                          placeholder={strings[\"Your Message\"]}\r\n                          name={contactForm.comment.name}\r\n                          ref={register(contactForm.comment.validate)}\r\n                        />\r\n                        {errors[contactForm.comment.name] && <p className=\"error-msg\">{errors[contactForm.comment.name].message}</p>}\r\n                        <button type=\"submit\" className=\"submit\" >\r\n                          {strings[\"Send\"]}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                  <p className=\"form-messege\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n//hostName = () => {\r\n//  return window.location.protocol + \"//\" + window.location.host;\r\n//}\r\n\r\nContact.propTypes = {\r\n  location: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    merchant: state.merchantData.merchant\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setLoader: (value) => {\r\n      dispatch(setLoader(value));\r\n    }\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(multilanguage(Contact));\r\n// export default Contact;\r\n"],"sourceRoot":""}